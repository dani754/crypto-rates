{"version":3,"sources":["components/CurrentTable.js","components/server.js","components/DateTime.js","components/Current.js","components/SortTable.js","components/HistoryTable.js","components/AdjustTable.js","components/History.js","App.js","index.js"],"names":["CurrentTable","props","rates","map","rate","i","url","timeOnly","dateISO","Date","toLocaleTimeString","timeStyle","hour12","timeZone","priceString","price","String","dot","indexOf","length","substr","substring","replace","dateParseForRouting","date","getDate","padStart","getMonth","getFullYear","parsedDateToInputFormat","ddmmyy","console","log","Current","getCurrentRates","fetch","method","dataType","headers","then","res","json","data","timePart","prices","BTC","ETH","LTC","setState","time","catch","err","state","Array","isArray","this","className","onClick","coin","switch","React","Component","arrangeToTable","row","dateStr","timeStr","priceStr","sortByDate","table","sort","a","b","localeCompare","HistoryTable","tableArray","sortByAscDate","sortByPrice","AdjustTable","handleDateToParent","handleChange","e","target","value","name","handleSubmit","event","parsedStart","start","parsedEnd","end","onUpdate","preventDefault","dates","times","defaultStart","defaultEnd","onSubmit","for","onChange","type","History","getHistoricRates","routeURL","coinNew","startNew","endNew","today","App","useState","page","togglePage","content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.370d9423.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\n\r\nfunction CurrentTable(props) {\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th><button >BTC</button></th>\r\n                    <th><button >ETH</button></th>\r\n                    <th><button >LTC</button></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    {\r\n                        props.rates.map( (rate, i) => {\r\n                            return (\r\n                                <td key={i} >{rate}</td>\r\n                            );\r\n                        })\r\n                    }\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default CurrentTable;","const url = 'https://crypto-rates-server.herokuapp.com/';\r\n\r\nexport default url;","\r\n//parse time from date\r\nexport function timeOnly(dateISO){\r\n    const time = new Date(dateISO).toLocaleTimeString('en',\r\n    { timeStyle: 'short', hour12: false, timeZone: 'Asia/Jerusalem' });\r\n    return time;\r\n}\r\n\r\n//string price array with commas\r\nexport function priceArrayString(ratesArray){\r\n    let pricesArray = ratesArray.map ( rate => {\r\n        return priceString(rate);\r\n    });\r\n    return pricesArray;\r\n}\r\n\r\n//string a single rate with commas given decimal point\r\nexport function priceString(rate){\r\n    let price = String(rate);\r\n    let dot = price.indexOf('.');\r\n    //if not decimal point and number is bigger than 999\r\n    if (dot === -1 && price.length > 3){\r\n        let substr = price.substring(price.length-3);\r\n        price = price.replace(substr, ','+substr);\r\n    }\r\n    //with decimal point and number bigger than 999\r\n    else if (dot > 0 && price.substring(0,dot).length > 3){\r\n        let substr = price.substring(dot-3); //use all digits before comma - avoiding equal digits for replace\r\n        price = price.replace(substr, ','+substr);\r\n    }\r\n    return price;\r\n}\r\n\r\n//change yyy-mm-dd to ddmmyy format for backend request\r\nexport function dateParseForRouting(date){\r\n    let dd = String(date.getDate()).padStart(2, '0');\r\n    let mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    let yy = String(date.getFullYear()).substring(2);\r\n    let dateParse = dd + mm + yy;\r\n    return dateParse;\r\n}\r\n\r\n//change backend ddmmyy format to yyy-mm-dd input date format\r\nexport function parsedDateToInputFormat(ddmmyy){\r\n    console.log(\"ddmmyy\", ddmmyy);\r\n    let date = \"20\" + String(ddmmyy.substring(4)) + \"-\" + ddmmyy.substring(2,4) + \"-\" + ddmmyy.substring(0,2);\r\n    console.log(\"date to input\", date);\r\n    return date;\r\n}","import React from 'react';\r\nimport CurrentTable from './CurrentTable';\r\nimport url from './server';\r\nimport {timeOnly, priceArrayString} from './DateTime';\r\nimport './Page.css';\r\n\r\nexport default class Current extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rates: [],\r\n            time: \"\",\r\n        }\r\n    }\r\n\r\n    //fetch current data from backend\r\n    getCurrentRates = () => {\r\n        fetch(url, {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        }).then( res => res.json() )\r\n        .then( data => {\r\n            console.log(\"data\", data);\r\n            let timePart = timeOnly(data.date);\r\n            let prices = priceArrayString([data.BTC, data.ETH, data.LTC]); //string pricies with commas\r\n            this.setState({\r\n                rates: prices,\r\n                time: timePart,\r\n            })\r\n        }).catch( err => console.log(err));        \r\n    }\r\n    \r\n    render() {\r\n        //initial state update\r\n        if ( Array.isArray(this.state.rates) && this.state.rates.length === 0 )\r\n            this.getCurrentRates();\r\n            \r\n        return (\r\n            <div className=\"Body\" >\r\n                <h2>Last Update on {this.state.time}</h2>\r\n                <CurrentTable rates ={this.state.rates} onClick={(coin)=>this.props.switch(coin)} />\r\n                <button className=\"BigButton\" onClick={()=>this.props.switch('BTC')} >Get Rates History</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {timeOnly, priceString} from './DateTime';\r\n\r\n//tranform data from backend to display format\r\nfunction arrangeToTable(data, coin){\r\n    let table = data.map( row => {\r\n        let dateStr = row.date.substring(0, 10);\r\n        let timeStr = timeOnly(row.date);\r\n        let priceStr = '';\r\n        switch(coin){\r\n            case 'ETH':\r\n                priceStr = priceString(row.ETH);\r\n                break;\r\n            case 'LTC':\r\n                priceStr = priceString(row.LTC);\r\n                break;\r\n            default:\r\n                priceStr = priceString(row.BTC);\r\n        }\r\n        return (\r\n            {\r\n                date: dateStr,\r\n                time: timeStr,\r\n                price: priceStr,\r\n            }\r\n        );\r\n    })\r\n    return table;\r\n}\r\n\r\n//sort table by date DESC\r\nexport function sortByDate(data, coin){\r\n    let table = arrangeToTable(data, coin);\r\n    table.sort(function(a, b){return b.date.localeCompare(a.date) || b.time.localeCompare(a.time)});\r\n    return table;\r\n}\r\n\r\n//sort table by date ASC\r\nexport function sortByAscDate(data, coin){\r\n    let table = arrangeToTable(data, coin);\r\n    table.sort(function(a, b){return a.date.localeCompare(b.date) || a.time.localeCompare(b.time)});\r\n    return table;\r\n}\r\n\r\n\r\n//sort table by price DESC\r\nexport function sortByPrice(data, coin){\r\n    let table = arrangeToTable(data, coin);\r\n    table.sort(function(a, b){return a.price - b.price});\r\n    return table;\r\n}\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport {sortByDate, sortByAscDate, sortByPrice} from './SortTable';\r\n\r\nfunction HistoryTable(props) {\r\n\r\n    let tableArray = sortByDate(props.data, props.coin);\r\n\r\n    return (\r\n        <table className=\"longTable\" >\r\n            <thead>\r\n                <tr>\r\n                    <th><button onClick={()=>{tableArray = sortByDate(props.data, props.coin)}} >Date</button></th>\r\n                    <th><button onClick={()=>{tableArray = sortByAscDate(props.data, props.coin)}}  >Time</button></th>\r\n                    <th><button onClick={()=>{tableArray = sortByPrice(props.data, props.coin)}}  >Price</button></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    tableArray.map( (rate,i) => {\r\n                        return (\r\n                            <tr key={i} >\r\n                                <td key={rate.date + i}>{rate.date}</td>\r\n                                <td key={rate.time + i}>{rate.time}</td>\r\n                                <td key={rate.price + i} >{rate.price}</td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default HistoryTable;","import React from 'react';\r\nimport './Table.css';\r\nimport {dateParseForRouting, parsedDateToInputFormat} from './DateTime';\r\n\r\nexport default class  AdjustTable extends React.Component  {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            coin: 'BTC',\r\n            start: '',\r\n            end: '',\r\n            dates: [],\r\n            times: [],\r\n            prices: [],\r\n        }\r\n    }\r\n\r\n    //adjusting the date format for backend fetching\r\n    handleDateToParent = (date) => {\r\n        let ddmmyy = dateParseForRouting(new Date(date));\r\n        return ddmmyy;\r\n    }\r\n\r\n    //updating state for form input\r\n    handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    //deliver new data request to parent (History)\r\n    handleSubmit = (event) => {\r\n        let parsedStart = this.handleDateToParent(this.state.start);\r\n        let parsedEnd = this.handleDateToParent(this.state.end);\r\n        this.props.onUpdate(this.state.coin, parsedStart, parsedEnd);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        //initial state translate to input format\r\n        if (this.state.start ===  ''){\r\n            let defaultStart = parsedDateToInputFormat(this.props.start);\r\n            let defaultEnd = parsedDateToInputFormat(this.props.end);\r\n            this.setState({\r\n                start: defaultStart,\r\n                end: defaultEnd,\r\n            });\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit} >\r\n\r\n                <label for=\"coin\" >Coin:</label>\r\n                <select name=\"coin\"\r\n                        value={this.state.coin}\r\n                        onChange={this.handleChange}>\r\n                    <option value=\"BTC\">Bitcoin</option>\r\n                    <option value=\"ETH\">Ethereum</option>\r\n                    <option value=\"LTC\">Litecoin</option>\r\n                </select>\r\n\r\n                <label for=\"start\" >From:</label>\r\n                    <input name=\"start\"\r\n                            type=\"date\"\r\n                            value={this.state.start}\r\n                            onChange={this.handleChange} />\r\n                \r\n                <label for=\"end\" >Until:</label>\r\n                    <input name=\"end\"\r\n                            type=\"date\"\r\n                            value={this.state.end}\r\n                            onChange={this.handleChange}  />\r\n\r\n                <button>OK</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport HistoryTable from './HistoryTable';\r\nimport AdjustTable from './AdjustTable';\r\nimport url from './server';\r\nimport {dateParseForRouting} from './DateTime';\r\nimport './Page.css';\r\n\r\nexport default class History extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            coin: 'BTC',\r\n            start: '',\r\n            end: '',\r\n            rates: [],\r\n        }\r\n    }\r\n\r\n    //fetch data from backend\r\n    getHistoricRates = () => {\r\n        let routeURL = url +this.state.coin + '/' + this.state.start + '/' + this.state.end;\r\n        fetch(routeURL, {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        }).then( res => res.json() )\r\n        .then( data => {\r\n            console.log(\"data\", data);\r\n            this.setState({\r\n                rates: data,\r\n            })\r\n        }).catch( err => console.log(err));        \r\n    }\r\n\r\n    //update filter from adjustTable input\r\n    handleChange = (coinNew,startNew,endNew) => {\r\n        this.setState({\r\n            coin: coinNew,\r\n            start: startNew,\r\n            end: endNew,\r\n            rates: [],\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        //initial state update\r\n        if ( Array.isArray(this.state.rates) && this.state.rates.length === 0 && this.state.start <= dateParseForRouting(new Date()))\r\n            this.getHistoricRates();\r\n        if ( this.state.start === ''){\r\n            let today = dateParseForRouting(new Date());\r\n            this.setState({\r\n                start: today,\r\n                end: today,\r\n            })\r\n        }\r\n            \r\n        return (\r\n            <div className=\"Body\" >\r\n                <button className=\"BigButton\"\r\n                        onClick={()=>this.props.switch('current')} >Back To Live Rates</button>\r\n                <AdjustTable coin={this.state.coin}\r\n                            start={this.state.start}\r\n                            end={this.state.end}\r\n                            onUpdate={(coin,start,end)=>this.handleChange(coin,start,end)} />\r\n                <HistoryTable data={this.state.rates}\r\n                            coin={this.state.coin} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport Current from './components/Current';\nimport History from './components/History';\n\nfunction App() {\n\n  const [page, togglePage] = useState('current');// default homepage - current rates\n\n  let content = <Current switch={(coin)=>togglePage(coin)} />;\n  if (page !== 'current'){\n    content = <History switch={(coin)=>{togglePage(coin)}} coin={page} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Crypto Rates in USD $</h1>\n      {content}\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}